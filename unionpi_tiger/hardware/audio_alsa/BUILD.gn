# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")
import("//drivers/peripheral/audio/audio.gni")

config("audio_interface_config_alsa") {
  visibility = [ ":*" ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-DGST_DISABLE_DEPRECATED",
    "-DHAVE_CONFIG_H",
    "-fno-strict-aliasing",
    "-Wno-sign-compare",
    "-Wno-builtin-requires-header",
    "-Wno-implicit-function-declaration",
    "-Wno-format",
    "-Wno-int-conversion",
    "-Wno-unused-function",
    "-Wno-unused-parameter",
    "-Wno-thread-safety-attributes",
    "-Wno-missing-field-initializers",
    "-Wno-inconsistent-missing-override",
    "-fno-rtti",
    "-fno-exceptions",
    "-ffunction-sections",
    "-fdata-sections",
  ]

  ldflags = [ "-Wl" ]
}

ohos_shared_library("hdi_audio_interface_lib_capture.alsa") {
  sources = [
    "//device/unionman/unionpi_tiger/third_party/tinyalsa/mixer.c",
    "//device/unionman/unionpi_tiger/third_party/tinyalsa/pcm.c",
    "src/audio_interface_lib_capture_alsa.c",
  ]

  include_dirs = [
    "//drivers/peripheral/audio/hal/hdi_passthrough/include",
    "//drivers/peripheral/audio/supportlibs/adm_adapter/include",
    "//drivers/peripheral/audio/interfaces/include",
    "//third_party/bounds_checking_function/include",
    "//device/unionman/unionpi_tiger/third_party/tinyalsa/include",
  ]

  deps = [
    "$hdf_uhdf_path/hdi:libhdi",
    "$hdf_uhdf_path/host:hdf_devhost",
    "$hdf_uhdf_path/host:libhdf_host",
    "$hdf_uhdf_path/ipc:libhdf_ipc_adapter",
    "$hdf_uhdf_path/manager:hdf_devmgr",
    "$hdf_uhdf_path/manager:hdf_devmgr.rc",
  ]

  install_images = [ chipset_base_dir ]

  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
  ]

  public_configs = [ ":audio_interface_config_alsa" ]

  subsystem_name = "hdf"
  part_name = "device_unionpi_tiger"
}

ohos_shared_library("hdi_audio_interface_lib_render.alsa") {
  sources = [
    "//device/unionman/unionpi_tiger/third_party/tinyalsa/mixer.c",
    "//device/unionman/unionpi_tiger/third_party/tinyalsa/pcm.c",
    "src/audio_interface_lib_render_alsa.c",
  ]

  include_dirs = [
    "//drivers/peripheral/audio/hal/hdi_passthrough/include",
    "//drivers/peripheral/audio/supportlibs/adm_adapter/include",
    "//drivers/peripheral/audio/interfaces/include",
    "//third_party/bounds_checking_function/include",
    "//device/unionman/unionpi_tiger/third_party/tinyalsa/include",
  ]

  deps = [
    "$hdf_uhdf_path/hdi:libhdi",
    "$hdf_uhdf_path/host:hdf_devhost",
    "$hdf_uhdf_path/host:libhdf_host",
    "$hdf_uhdf_path/ipc:libhdf_ipc_adapter",
    "$hdf_uhdf_path/manager:hdf_devmgr",
    "$hdf_uhdf_path/manager:hdf_devmgr.rc",
  ]

  install_images = [ chipset_base_dir ]

  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
  ]

  public_configs = [ ":audio_interface_config_alsa" ]

  subsystem_name = "hdf"
  part_name = "device_unionpi_tiger"
}

group("audio_alsa") {
  deps = [
    ":hdi_audio_interface_lib_capture.alsa",
    ":hdi_audio_interface_lib_render.alsa",
  ]
}
